#include <WiFi.h>
#include <PubSubClient.h>

String msg = "";
#define MOTION_SENSOR_PIN 4 
// WiFi credentials
const char* ssid = "-------";
const char* password = "----------";

// MQTT Broker IP (ESP32 Broker)
const char* mqtt_server = "-----------";
const int mqtt_port = 1883;

// MQTT client
WiFiClient espClient;
PubSubClient client(espClient);

void setup_wifi() {
  Serial.println("Connecting WiFi...");
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("Connected WiFi");
}

void reconnect() {
  while (!client.connected()) {
    Serial.println("Connecting to broker MQTT...");
    if (client.connect("ESP32Client")) {
      Serial.println("Connected");
    } else {
      Serial.print("Connection failed, rc=");
      Serial.print(client.state());
      delay(5000);
    }
  }
}

void setup() {
  Serial.begin(115200);
  setup_wifi();
  client.setServer(mqtt_server, mqtt_port);
  pinMode(MOTION_SENSOR_PIN, INPUT);
  pinMode(WINDOW, INPUT);

  btStop();  // Disable Bluetooth
}

void loop() {
  if (!client.connected()) {
    reconnect();
  }
  client.loop();

  
  int motionState = digitalRead(MOTION_SENSOR_PIN);
  int windowState = digitalRead(WINDOW);

  // Publish only if motion state changes
  if (motionState != lastMotionState) {
      lastMotionState = motionState;
      if (motionState == HIGH) {
          msg = "Movement";
      } else {
          msg = "No movement";
      }
      client.publish("PIR1", msg.c_str());
  }

  // Publish only if window state changes
  if (windowState != lastWindowState) {
      lastWindowState = windowState;
      if (windowState == LOW) {
          msg = "Opened";
      } else {
          msg = "Closed";
      }
      client.publish("window1", msg.c_str());
  }

  // Publish alarm status only if it changes
  String newRoomState = (windowState == LOW || motionState == HIGH) ? "ALARMR1" : "SECURE";
  if (newRoomState != lastRoomState) {
      lastRoomState = newRoomState;
      client.publish("ROOM", newRoomState.c_str());
  }

  delay(300);
}

