#include <WiFi.h>
#include <PubSubClient.h>
#include "esp_sleep.h"

String msg;
#define DOOR 5


 static int lastDoorState = LOW;
static String lastRoomState = "";



// Configura WiFi
const char* ssid = "nickspot";
const char* password = "123456789";

// Configura EMQX
const char* mqtt_server = "192.168.13.138";
const int mqtt_port = 1883;

WiFiClient espClient;
PubSubClient client(espClient);

void setup_wifi() {
  Serial.println("Connecting WiFi...");
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("Connected WiFi");
}

void reconnect() {
  while (!client.connected()) {
    Serial.println("Connecting to broker MQTT...");
    if (client.connect("ESP32Client_door")) {
      Serial.println("Connected");
    } else {
      Serial.print("Connection failed, rc=");
      Serial.print(client.state());
      delay(5000);
    }
  }
}

void setup() {
  Serial.begin(115200);
  setup_wifi();
  client.setServer(mqtt_server, mqtt_port);
  pinMode(DOOR, INPUT);

  btStop();  // Disable Bluetooth
}

void loop() {
  if (!client.connected()) {
    reconnect();
  }
  client.loop();
int state = digitalRead(DOOR);

// Publish only if door state changes
if (state != lastDoorState) {
    lastDoorState = state;

    if (state == HIGH) {
        client.publish("ROOM", "ALARMR2");
        client.publish("DOOR", "open");
    } else {
        client.publish("ROOM", "SECURE");
        client.publish("DOOR", "closed");
    }

    delay(500);
}
}
